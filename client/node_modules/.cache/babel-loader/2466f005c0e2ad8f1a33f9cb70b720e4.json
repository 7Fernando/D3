{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fer\\\\Desktop\\\\PI\\\\PI-Dogs-main\\\\client\\\\src\\\\components\\\\Filters\\\\Filters.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"; //import { fetchDogs } from \"../../redux/actions/actions\";\n\nimport { orderByName } from \"../../redux/actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filters = () => {\n  _s();\n\n  //const dogs = useSelector((state) => state.dogs);\n  //const temperaments = useSelector((state) => state.temperaments);\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   dispatch(fetchDogs());\n  //   //dispatch(getTemperaments());\n  // }, [dispatch]);\n  //console.log(temperaments);\n  //console.log(\"filter\", dogs);\n  //if (temperaments.length) {\n  // <label htmlFor=\"temperaments\">Choose temperaments: </label>\n  // <select name=\"temperaments\" onChange={onClick}>\n  //     {\n  //         state.map( t => <option value={t} key={t}> {t} </option>)\n  //     }\n  // </select>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Order\",\n        children: \"Order by: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"Order\",\n        children: \"asc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this); // } else return <h2>Cargando...</h2>;\n};\n\n_s(Filters, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["C:/Users/Fer/Desktop/PI/PI-Dogs-main/client/src/components/Filters/Filters.jsx"],"names":["React","useEffect","useDispatch","useSelector","orderByName","Filters","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AAEA,SAASC,WAAT,QAA4B,6BAA5B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAHoB,CAKpB;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE;AAAA,2BACE;AAAA,8BACA;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,CArBoB,CAuDpB;AACD,CAxDD;;GAAMG,O;UAGaH,W;;;KAHbG,O;AAyDN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//import { fetchDogs } from \"../../redux/actions/actions\";\r\n\r\nimport { orderByName } from \"../../redux/actions/actions\";\r\n\r\nconst Filters = () => {\r\n  //const dogs = useSelector((state) => state.dogs);\r\n  //const temperaments = useSelector((state) => state.temperaments);\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchDogs());\r\n  //   //dispatch(getTemperaments());\r\n  // }, [dispatch]);\r\n  //console.log(temperaments);\r\n  //console.log(\"filter\", dogs);\r\n\r\n  \r\n\r\n  //if (temperaments.length) {\r\n  // <label htmlFor=\"temperaments\">Choose temperaments: </label>\r\n  // <select name=\"temperaments\" onChange={onClick}>\r\n  //     {\r\n  //         state.map( t => <option value={t} key={t}> {t} </option>)\r\n  //     }\r\n  // </select>\r\n  return (\r\n    <div>\r\n      <form >\r\n      <label htmlFor=\"Order\">Order by: </label>\r\n      <select name=\"Order\" >asc</select>\r\n      </form>\r\n      {/* <label htmlFor=\"\"> Order by weigth: </label>\r\n        <select>\r\n          <option value=\"weight_min\"> Min weight </option>\r\n          <option value=\"weight_max\"> Max weight </option>\r\n        </select>{\" \"}\r\n        <br /> <br />\r\n        <label htmlFor=\"\"> Filter by origin: </label>\r\n        <select>\r\n          <option value=\"Dogs from API\"> Dogs from API </option>\r\n          <option value=\"Dogs from DB\"> Dogs created </option>\r\n        </select>{\" \"}\r\n        <br /> <br />\r\n        <label htmlFor=\"\">Filter by temperament: </label>\r\n        <br />\r\n        {temperaments.map((t, i) => {\r\n          return (\r\n            <React.Fragment key={t + \"m\"}>\r\n              <label htmlFor={t} key={t + \"n\"}>\r\n                {\" \"}\r\n                {t + \" \"}\r\n                <input type=\"checkbox\" name={t} key={t} />\r\n              </label>\r\n            </React.Fragment>\r\n          );\r\n        })} */}\r\n    \r\n    </div>\r\n  );\r\n  // } else return <h2>Cargando...</h2>;\r\n};\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}