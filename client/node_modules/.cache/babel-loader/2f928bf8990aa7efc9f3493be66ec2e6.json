{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fer\\\\Desktop\\\\PI\\\\PI-Dogs-main\\\\client\\\\src\\\\components\\\\Filters\\\\Filters.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //import { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { orderByName } from \"../../redux/actions/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filters = () => {\n  _s();\n\n  //const dogs = useSelector((state) => state.dogs);\n  //const temperaments = useSelector((state) => state.temperaments);\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   dispatch(fetchDogs());\n  //   dispatch(getTemperaments());\n  // }, [dispatch]);\n  //console.log(temperaments);\n  //console.log(\"filter\", dogs);\n\n  function orderByName1(e) {\n    e.preventDefault();\n    dispatch(orderByName(e.target.value)); // dogs.sort((a, b) => {\n    //   const nameA = a.name.toLowerCase();\n    //   const nameB = b.name.toLowerCase();\n    //   if (nameA < nameB) return -1;\n    //   if (nameA > nameB) return 1;\n    //   return 0;\n    // });\n  } //if (temperaments.length) {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"\",\n      children: \"Order by name: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: orderByName,\n      children: /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Z-A\",\n        children: \" Z-A \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this); // } else return <h2>Cargando...</h2>;\n};\n\n_s(Filters, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Filters;\nexport default Filters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"sources":["C:/Users/Fer/Desktop/PI/PI-Dogs-main/client/src/components/Filters/Filters.jsx"],"names":["React","useDispatch","useSelector","orderByName","Filters","dispatch","orderByName1","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,WAAT,QAA4B,6BAA5B;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAHoB,CAKpB;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACF,WAAW,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAZ,CAAR,CAFuB,CAGvB;AACA;AACA;AAEA;AACA;AACA;AACA;AACD,GAvBmB,CAyBpB;;;AACE,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,QAAQ,EAAEP,WAAlB;AAAA,6BAEE;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA1BkB,CA6DrB;AACA,CA9DD;;GAAMC,O;UAGaH,W;;;KAHbG,O;AA+DN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\n//import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { orderByName } from \"../../redux/actions/actions\";\r\n\r\n\r\nconst Filters = () => {\r\n  //const dogs = useSelector((state) => state.dogs);\r\n  //const temperaments = useSelector((state) => state.temperaments);\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(fetchDogs());\r\n  //   dispatch(getTemperaments());\r\n  // }, [dispatch]);\r\n  //console.log(temperaments);\r\n  //console.log(\"filter\", dogs);\r\n\r\n  function orderByName1(e) {\r\n    e.preventDefault();\r\n    dispatch(orderByName(e.target.value))\r\n    // dogs.sort((a, b) => {\r\n    //   const nameA = a.name.toLowerCase();\r\n    //   const nameB = b.name.toLowerCase();\r\n\r\n    //   if (nameA < nameB) return -1;\r\n    //   if (nameA > nameB) return 1;\r\n    //   return 0;\r\n    // });\r\n  }\r\n\r\n  //if (temperaments.length) {\r\n    return (\r\n      <div>\r\n        <label htmlFor=\"\">Order by name: </label>\r\n        <select onChange={orderByName}>\r\n          {/* <option value=\"A-Z\"> A-Z </option> */}\r\n          <option value=\"Z-A\"> Z-A </option>\r\n        </select>\r\n        {/* <label htmlFor=\"\"> Order by weigth: </label>\r\n        <select>\r\n          <option value=\"weight_min\"> Min weight </option>\r\n          <option value=\"weight_max\"> Max weight </option>\r\n        </select>{\" \"}\r\n        <br /> <br />\r\n        <label htmlFor=\"\"> Filter by origin: </label>\r\n        <select>\r\n          <option value=\"Dogs from API\"> Dogs from API </option>\r\n          <option value=\"Dogs from DB\"> Dogs created </option>\r\n        </select>{\" \"}\r\n        <br /> <br />\r\n        <label htmlFor=\"\">Filter by temperament: </label>\r\n        <br />\r\n        {temperaments.map((t, i) => {\r\n          return (\r\n            <React.Fragment key={t + \"m\"}>\r\n              <label htmlFor={t} key={t + \"n\"}>\r\n                {\" \"}\r\n                {t + \" \"}\r\n                <input type=\"checkbox\" name={t} key={t} />\r\n              </label>\r\n            </React.Fragment>\r\n          );\r\n        })} */}\r\n      \r\n      </div>\r\n    );\r\n // } else return <h2>Cargando...</h2>;\r\n};\r\nexport default Filters;\r\n"]},"metadata":{},"sourceType":"module"}