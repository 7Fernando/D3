{"ast":null,"code":"//import { fetchDogs } from \"../actions/actions\";\nconst initialState = {\n  dogs: [],\n  temperaments: []\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"fetchDogs\":\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case \"createDog\":\n      return { ...state,\n        //copio lo que ya tengo en el array le concateno el nuevo obj\n        dogs: state.dogs.concat(action.payload) //[{},{}] --> [{},{},{}]\n\n      };\n\n    case \"getTemperaments\":\n      return { ...state,\n        temperaments: action.payload\n      };\n\n    case \"orderByName\":\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Fer/Desktop/PI/PI-Dogs-main/client/src/redux/reducer/rootReducer.jsx"],"names":["initialState","dogs","temperaments","rootReducer","state","action","type","payload","concat"],"mappings":"AAAA;AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;;AAKA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAFR,OAAP;;AAIF,SAAK,WAAL;AACE,aAAO,EACL,GAAGH,KADE;AACK;AACVH,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,CAAWO,MAAX,CAAkBH,MAAM,CAACE,OAAzB,CAFD,CAEoC;;AAFpC,OAAP;;AAIF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAFhB,OAAP;;AAKF,SAAK,aAAL;AACA;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBD;;AAuBA,eAAeD,WAAf","sourcesContent":["//import { fetchDogs } from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n  dogs: [],\r\n  temperaments: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"fetchDogs\":\r\n      return {\r\n        ...state,\r\n        dogs: action.payload,\r\n      };\r\n    case \"createDog\":\r\n      return {\r\n        ...state, //copio lo que ya tengo en el array le concateno el nuevo obj\r\n        dogs: state.dogs.concat(action.payload), //[{},{}] --> [{},{},{}]\r\n      };\r\n    case \"getTemperaments\":\r\n      return {\r\n        ...state,\r\n        temperaments: action.payload,\r\n      };\r\n\r\n    case \"orderByName\":\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}